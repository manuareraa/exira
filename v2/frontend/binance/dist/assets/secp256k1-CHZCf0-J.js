import{bg as t,bh as e,bi as n,bj as r,bk as o,bl as i,bm as s,bn as f}from"./index-Dn4U-enM.js";
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const a=BigInt(0),u=BigInt(1),c=BigInt(2);function l(t){return t instanceof Uint8Array||null!=t&&"object"==typeof t&&"Uint8Array"===t.constructor.name}function d(t){if(!l(t))throw new Error("Uint8Array expected")}const h=Array.from({length:256},((t,e)=>e.toString(16).padStart(2,"0")));function g(t){d(t);let e="";for(let n=0;n<t.length;n++)e+=h[t[n]];return e}function w(t){const e=t.toString(16);return 1&e.length?`0${e}`:e}function p(t){if("string"!=typeof t)throw new Error("hex string expected, got "+typeof t);return BigInt(""===t?"0":`0x${t}`)}const y={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function m(t){return t>=y._0&&t<=y._9?t-y._0:t>=y._A&&t<=y._F?t-(y._A-10):t>=y._a&&t<=y._f?t-(y._a-10):void 0}function E(t){if("string"!=typeof t)throw new Error("hex string expected, got "+typeof t);const e=t.length,n=e/2;if(e%2)throw new Error("padded hex string expected, got unpadded hex of length "+e);const r=new Uint8Array(n);for(let o=0,i=0;o<n;o++,i+=2){const e=m(t.charCodeAt(i)),n=m(t.charCodeAt(i+1));if(void 0===e||void 0===n){const e=t[i]+t[i+1];throw new Error('hex string expected, got non-hex character "'+e+'" at index '+i)}r[o]=16*e+n}return r}function b(t){return p(g(t))}function B(t){return d(t),p(g(Uint8Array.from(t).reverse()))}function x(t,e){return E(t.toString(16).padStart(2*e,"0"))}function v(t,e){return x(t,e).reverse()}function I(t,e,n){let r;if("string"==typeof e)try{r=E(e)}catch(i){throw new Error(`${t} must be valid hex string, got "${e}". Cause: ${i}`)}else{if(!l(e))throw new Error(`${t} must be hex string or Uint8Array`);r=Uint8Array.from(e)}const o=r.length;if("number"==typeof n&&o!==n)throw new Error(`${t} expected ${n} bytes, got ${o}`);return r}function S(...t){let e=0;for(let r=0;r<t.length;r++){const n=t[r];d(n),e+=n.length}const n=new Uint8Array(e);for(let r=0,o=0;r<t.length;r++){const e=t[r];n.set(e,o),o+=e.length}return n}const A=t=>(c<<BigInt(t-1))-u,O=t=>new Uint8Array(t),R=t=>Uint8Array.from(t);function q(t,e,n){if("number"!=typeof t||t<2)throw new Error("hashLen must be a number");if("number"!=typeof e||e<2)throw new Error("qByteLen must be a number");if("function"!=typeof n)throw new Error("hmacFn must be a function");let r=O(t),o=O(t),i=0;const s=()=>{r.fill(1),o.fill(0),i=0},f=(...t)=>n(o,r,...t),a=(t=O())=>{o=f(R([0]),t),r=f(),0!==t.length&&(o=f(R([1]),t),r=f())},u=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let t=0;const n=[];for(;t<e;){r=f();const e=r.slice();n.push(e),t+=r.length}return S(...n)};return(t,e)=>{let n;for(s(),a(t);!(n=e(u()));)a();return s(),n}}const N={bigint:t=>"bigint"==typeof t,function:t=>"function"==typeof t,boolean:t=>"boolean"==typeof t,string:t=>"string"==typeof t,stringOrUint8Array:t=>"string"==typeof t||l(t),isSafeInteger:t=>Number.isSafeInteger(t),array:t=>Array.isArray(t),field:(t,e)=>e.Fp.isValid(t),hash:t=>"function"==typeof t&&Number.isSafeInteger(t.outputLen)};function H(t,e,n={}){const r=(e,n,r)=>{const o=N[n];if("function"!=typeof o)throw new Error(`Invalid validator "${n}", expected function`);const i=t[e];if(!(r&&void 0===i||o(i,t)))throw new Error(`Invalid param ${String(e)}=${i} (${typeof i}), expected ${n}`)};for(const[o,i]of Object.entries(e))r(o,i,!1);for(const[o,i]of Object.entries(n))r(o,i,!0);return t}const T=Object.freeze(Object.defineProperty({__proto__:null,abytes:d,bitGet:function(t,e){return t>>BigInt(e)&u},bitLen:function(t){let e;for(e=0;t>a;t>>=u,e+=1);return e},bitMask:A,bitSet:function(t,e,n){return t|(n?u:a)<<BigInt(e)},bytesToHex:g,bytesToNumberBE:b,bytesToNumberLE:B,concatBytes:S,createHmacDrbg:q,ensureBytes:I,equalBytes:function(t,e){if(t.length!==e.length)return!1;let n=0;for(let r=0;r<t.length;r++)n|=t[r]^e[r];return 0===n},hexToBytes:E,hexToNumber:p,isBytes:l,numberToBytesBE:x,numberToBytesLE:v,numberToHexUnpadded:w,numberToVarBytesBE:function(t){return E(w(t))},utf8ToBytes:function(t){if("string"!=typeof t)throw new Error("utf8ToBytes expected string, got "+typeof t);return new Uint8Array((new TextEncoder).encode(t))},validateObject:H},Symbol.toStringTag,{value:"Module"})),L=BigInt(0),_=BigInt(1),$=BigInt(2),P=BigInt(3),z=BigInt(4),F=BigInt(5),U=BigInt(8);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */function k(t,e){const n=t%e;return n>=L?n:e+n}function Z(t,e,n){if(n<=L||e<L)throw new Error("Expected power/modulo > 0");if(n===_)return L;let r=_;for(;e>L;)e&_&&(r=r*t%n),t=t*t%n,e>>=_;return r}function j(t,e,n){let r=t;for(;e-- >L;)r*=r,r%=n;return r}function C(t,e){if(t===L||e<=L)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let n=k(t,e),r=e,o=L,i=_;for(;n!==L;){const t=r%n,e=o-i*(r/n);r=n,n=t,o=i,i=e}if(r!==_)throw new Error("invert: does not exist");return k(o,e)}function V(t){if(t%z===P){const e=(t+_)/z;return function(t,n){const r=t.pow(n,e);if(!t.eql(t.sqr(r),n))throw new Error("Cannot find square root");return r}}if(t%U===F){const e=(t-F)/U;return function(t,n){const r=t.mul(n,$),o=t.pow(r,e),i=t.mul(n,o),s=t.mul(t.mul(i,$),o),f=t.mul(i,t.sub(s,t.ONE));if(!t.eql(t.sqr(f),n))throw new Error("Cannot find square root");return f}}return function(t){const e=(t-_)/$;let n,r,o;for(n=t-_,r=0;n%$===L;n/=$,r++);for(o=$;o<t&&Z(o,e,t)!==t-_;o++);if(1===r){const e=(t+_)/z;return function(t,n){const r=t.pow(n,e);if(!t.eql(t.sqr(r),n))throw new Error("Cannot find square root");return r}}const i=(n+_)/$;return function(t,s){if(t.pow(s,e)===t.neg(t.ONE))throw new Error("Cannot find square root");let f=r,a=t.pow(t.mul(t.ONE,o),n),u=t.pow(s,i),c=t.pow(s,n);for(;!t.eql(c,t.ONE);){if(t.eql(c,t.ZERO))return t.ZERO;let e=1;for(let r=t.sqr(c);e<f&&!t.eql(r,t.ONE);e++)r=t.sqr(r);const n=t.pow(a,_<<BigInt(f-e-1));a=t.sqr(n),u=t.mul(u,n),c=t.mul(c,a),f=e}return u}}(t)}BigInt(9),BigInt(16);const K=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function D(t,e){const n=void 0!==e?e:t.toString(2).length;return{nBitLength:n,nByteLength:Math.ceil(n/8)}}function Y(t){if("bigint"!=typeof t)throw new Error("field order must be bigint");const e=t.toString(2).length;return Math.ceil(e/8)}function M(t){const e=Y(t);return e+Math.ceil(e/2)}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const W=BigInt(0),G=BigInt(1);function J(t){return H(t.Fp,K.reduce(((t,e)=>(t[e]="function",t)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"})),H(t,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...D(t.n,t.nBitLength),...t,p:t.Fp.ORDER})}
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */const{bytesToNumberBE:Q,hexToBytes:X}=T,tt={Err:class extends Error{constructor(t=""){super(t)}},_parseInt(t){const{Err:e}=tt;if(t.length<2||2!==t[0])throw new e("Invalid signature integer tag");const n=t[1],r=t.subarray(2,n+2);if(!n||r.length!==n)throw new e("Invalid signature integer: wrong length");if(128&r[0])throw new e("Invalid signature integer: negative");if(0===r[0]&&!(128&r[1]))throw new e("Invalid signature integer: unnecessary leading zero");return{d:Q(r),l:t.subarray(n+2)}},toSig(t){const{Err:e}=tt,n="string"==typeof t?X(t):t;d(n);let r=n.length;if(r<2||48!=n[0])throw new e("Invalid signature tag");if(n[1]!==r-2)throw new e("Invalid signature: incorrect length");const{d:o,l:i}=tt._parseInt(n.subarray(2)),{d:s,l:f}=tt._parseInt(i);if(f.length)throw new e("Invalid signature: left bytes after parsing");return{r:o,s:s}},hexFromSig(t){const e=t=>8&Number.parseInt(t[0],16)?"00"+t:t,n=t=>{const e=t.toString(16);return 1&e.length?`0${e}`:e},r=e(n(t.s)),o=e(n(t.r)),i=r.length/2,s=o.length/2,f=n(i),a=n(s);return`30${n(s+i+4)}02${a}${o}02${f}${r}`}},et=BigInt(0),nt=BigInt(1);BigInt(2);const rt=BigInt(3);function ot(t){const e=function(t){const e=J(t);H(e,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:n,Fp:r,a:o}=e;if(n){if(!r.eql(o,r.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof n||"bigint"!=typeof n.beta||"function"!=typeof n.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...e})}(t),{Fp:n}=e,r=e.toBytes||((t,e,r)=>{const o=e.toAffine();return S(Uint8Array.from([4]),n.toBytes(o.x),n.toBytes(o.y))}),o=e.fromBytes||(t=>{const e=t.subarray(1);return{x:n.fromBytes(e.subarray(0,n.BYTES)),y:n.fromBytes(e.subarray(n.BYTES,2*n.BYTES))}});function i(t){const{a:r,b:o}=e,i=n.sqr(t),s=n.mul(i,t);return n.add(n.add(s,n.mul(t,r)),o)}if(!n.eql(n.sqr(e.Gy),i(e.Gx)))throw new Error("bad generator point: equation left != right");function s(t){return"bigint"==typeof t&&et<t&&t<e.n}function f(t){if(!s(t))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function a(t){const{allowedPrivateKeyLengths:n,nByteLength:r,wrapPrivateKey:o,n:i}=e;if(n&&"bigint"!=typeof t){if(l(t)&&(t=g(t)),"string"!=typeof t||!n.includes(t.length))throw new Error("Invalid key");t=t.padStart(2*r,"0")}let s;try{s="bigint"==typeof t?t:b(I("private key",t,r))}catch(a){throw new Error(`private key must be ${r} bytes, hex or bigint, not ${typeof t}`)}return o&&(s=k(s,i)),f(s),s}const u=new Map;function c(t){if(!(t instanceof d))throw new Error("ProjectivePoint expected")}class d{constructor(t,e,r){if(this.px=t,this.py=e,this.pz=r,null==t||!n.isValid(t))throw new Error("x required");if(null==e||!n.isValid(e))throw new Error("y required");if(null==r||!n.isValid(r))throw new Error("z required")}static fromAffine(t){const{x:e,y:r}=t||{};if(!t||!n.isValid(e)||!n.isValid(r))throw new Error("invalid affine point");if(t instanceof d)throw new Error("projective point not allowed");const o=t=>n.eql(t,n.ZERO);return o(e)&&o(r)?d.ZERO:new d(e,r,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(t){const e=n.invertBatch(t.map((t=>t.pz)));return t.map(((t,n)=>t.toAffine(e[n]))).map(d.fromAffine)}static fromHex(t){const e=d.fromAffine(o(I("pointHex",t)));return e.assertValidity(),e}static fromPrivateKey(t){return d.BASE.multiply(a(t))}_setWindowSize(t){this._WINDOW_SIZE=t,u.delete(this)}assertValidity(){if(this.is0()){if(e.allowInfinityPoint&&!n.is0(this.py))return;throw new Error("bad point: ZERO")}const{x:t,y:r}=this.toAffine();if(!n.isValid(t)||!n.isValid(r))throw new Error("bad point: x or y not FE");const o=n.sqr(r),s=i(t);if(!n.eql(o,s))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:t}=this.toAffine();if(n.isOdd)return!n.isOdd(t);throw new Error("Field doesn't support isOdd")}equals(t){c(t);const{px:e,py:r,pz:o}=this,{px:i,py:s,pz:f}=t,a=n.eql(n.mul(e,f),n.mul(i,o)),u=n.eql(n.mul(r,f),n.mul(s,o));return a&&u}negate(){return new d(this.px,n.neg(this.py),this.pz)}double(){const{a:t,b:r}=e,o=n.mul(r,rt),{px:i,py:s,pz:f}=this;let a=n.ZERO,u=n.ZERO,c=n.ZERO,l=n.mul(i,i),h=n.mul(s,s),g=n.mul(f,f),w=n.mul(i,s);return w=n.add(w,w),c=n.mul(i,f),c=n.add(c,c),a=n.mul(t,c),u=n.mul(o,g),u=n.add(a,u),a=n.sub(h,u),u=n.add(h,u),u=n.mul(a,u),a=n.mul(w,a),c=n.mul(o,c),g=n.mul(t,g),w=n.sub(l,g),w=n.mul(t,w),w=n.add(w,c),c=n.add(l,l),l=n.add(c,l),l=n.add(l,g),l=n.mul(l,w),u=n.add(u,l),g=n.mul(s,f),g=n.add(g,g),l=n.mul(g,w),a=n.sub(a,l),c=n.mul(g,h),c=n.add(c,c),c=n.add(c,c),new d(a,u,c)}add(t){c(t);const{px:r,py:o,pz:i}=this,{px:s,py:f,pz:a}=t;let u=n.ZERO,l=n.ZERO,h=n.ZERO;const g=e.a,w=n.mul(e.b,rt);let p=n.mul(r,s),y=n.mul(o,f),m=n.mul(i,a),E=n.add(r,o),b=n.add(s,f);E=n.mul(E,b),b=n.add(p,y),E=n.sub(E,b),b=n.add(r,i);let B=n.add(s,a);return b=n.mul(b,B),B=n.add(p,m),b=n.sub(b,B),B=n.add(o,i),u=n.add(f,a),B=n.mul(B,u),u=n.add(y,m),B=n.sub(B,u),h=n.mul(g,b),u=n.mul(w,m),h=n.add(u,h),u=n.sub(y,h),h=n.add(y,h),l=n.mul(u,h),y=n.add(p,p),y=n.add(y,p),m=n.mul(g,m),b=n.mul(w,b),y=n.add(y,m),m=n.sub(p,m),m=n.mul(g,m),b=n.add(b,m),p=n.mul(y,b),l=n.add(l,p),p=n.mul(B,b),u=n.mul(E,u),u=n.sub(u,p),p=n.mul(E,y),h=n.mul(B,h),h=n.add(h,p),new d(u,l,h)}subtract(t){return this.add(t.negate())}is0(){return this.equals(d.ZERO)}wNAF(t){return w.wNAFCached(this,u,t,(t=>{const e=n.invertBatch(t.map((t=>t.pz)));return t.map(((t,n)=>t.toAffine(e[n]))).map(d.fromAffine)}))}multiplyUnsafe(t){const r=d.ZERO;if(t===et)return r;if(f(t),t===nt)return this;const{endo:o}=e;if(!o)return w.unsafeLadder(this,t);let{k1neg:i,k1:s,k2neg:a,k2:u}=o.splitScalar(t),c=r,l=r,h=this;for(;s>et||u>et;)s&nt&&(c=c.add(h)),u&nt&&(l=l.add(h)),h=h.double(),s>>=nt,u>>=nt;return i&&(c=c.negate()),a&&(l=l.negate()),l=new d(n.mul(l.px,o.beta),l.py,l.pz),c.add(l)}multiply(t){f(t);let r,o,i=t;const{endo:s}=e;if(s){const{k1neg:t,k1:e,k2neg:f,k2:a}=s.splitScalar(i);let{p:u,f:c}=this.wNAF(e),{p:l,f:h}=this.wNAF(a);u=w.constTimeNegate(t,u),l=w.constTimeNegate(f,l),l=new d(n.mul(l.px,s.beta),l.py,l.pz),r=u.add(l),o=c.add(h)}else{const{p:t,f:e}=this.wNAF(i);r=t,o=e}return d.normalizeZ([r,o])[0]}multiplyAndAddUnsafe(t,e,n){const r=d.BASE,o=(t,e)=>e!==et&&e!==nt&&t.equals(r)?t.multiply(e):t.multiplyUnsafe(e),i=o(this,e).add(o(t,n));return i.is0()?void 0:i}toAffine(t){const{px:e,py:r,pz:o}=this,i=this.is0();null==t&&(t=i?n.ONE:n.inv(o));const s=n.mul(e,t),f=n.mul(r,t),a=n.mul(o,t);if(i)return{x:n.ZERO,y:n.ZERO};if(!n.eql(a,n.ONE))throw new Error("invZ was invalid");return{x:s,y:f}}isTorsionFree(){const{h:t,isTorsionFree:n}=e;if(t===nt)return!0;if(n)return n(d,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:t,clearCofactor:n}=e;return t===nt?this:n?n(d,this):this.multiplyUnsafe(e.h)}toRawBytes(t=!0){return this.assertValidity(),r(d,this,t)}toHex(t=!0){return g(this.toRawBytes(t))}}d.BASE=new d(e.Gx,e.Gy,n.ONE),d.ZERO=new d(n.ZERO,n.ONE,n.ZERO);const h=e.nBitLength,w=function(t,e){const n=(t,e)=>{const n=e.negate();return t?n:e},r=t=>({windows:Math.ceil(e/t)+1,windowSize:2**(t-1)});return{constTimeNegate:n,unsafeLadder(e,n){let r=t.ZERO,o=e;for(;n>W;)n&G&&(r=r.add(o)),o=o.double(),n>>=G;return r},precomputeWindow(t,e){const{windows:n,windowSize:o}=r(e),i=[];let s=t,f=s;for(let r=0;r<n;r++){f=s,i.push(f);for(let t=1;t<o;t++)f=f.add(s),i.push(f);s=f.double()}return i},wNAF(e,o,i){const{windows:s,windowSize:f}=r(e);let a=t.ZERO,u=t.BASE;const c=BigInt(2**e-1),l=2**e,d=BigInt(e);for(let t=0;t<s;t++){const e=t*f;let r=Number(i&c);i>>=d,r>f&&(r-=l,i+=G);const s=e,h=e+Math.abs(r)-1,g=t%2!=0,w=r<0;0===r?u=u.add(n(g,o[s])):a=a.add(n(w,o[h]))}return{p:a,f:u}},wNAFCached(t,e,n,r){const o=t._WINDOW_SIZE||1;let i=e.get(t);return i||(i=this.precomputeWindow(t,o),1!==o&&e.set(t,r(i))),this.wNAF(o,i,n)}}}(d,e.endo?Math.ceil(h/2):h);return{CURVE:e,ProjectivePoint:d,normPrivateKeyToScalar:a,weierstrassEquation:i,isWithinCurveOrder:s}}function it(t){const e=function(t){const e=J(t);return H(e,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...e})}(t),{Fp:n,n:r}=e,o=n.BYTES+1,i=2*n.BYTES+1;function s(t){return k(t,r)}function f(t){return C(t,r)}const{ProjectivePoint:a,normPrivateKeyToScalar:u,weierstrassEquation:c,isWithinCurveOrder:d}=ot({...e,toBytes(t,e,r){const o=e.toAffine(),i=n.toBytes(o.x),s=S;return r?s(Uint8Array.from([e.hasEvenY()?2:3]),i):s(Uint8Array.from([4]),i,n.toBytes(o.y))},fromBytes(t){const e=t.length,r=t[0],s=t.subarray(1);if(e!==o||2!==r&&3!==r){if(e===i&&4===r){return{x:n.fromBytes(s.subarray(0,n.BYTES)),y:n.fromBytes(s.subarray(n.BYTES,2*n.BYTES))}}throw new Error(`Point of length ${e} was invalid. Expected ${o} compressed bytes or ${i} uncompressed bytes`)}{const t=b(s);if(!(et<(f=t)&&f<n.ORDER))throw new Error("Point is not on curve");const e=c(t);let o;try{o=n.sqrt(e)}catch(a){const t=a instanceof Error?": "+a.message:"";throw new Error("Point is not on curve"+t)}return!(1&~r)!==((o&nt)===nt)&&(o=n.neg(o)),{x:t,y:o}}var f}}),h=t=>g(x(t,e.nByteLength));function w(t){return t>r>>nt}const p=(t,e,n)=>b(t.slice(e,n));class y{constructor(t,e,n){this.r=t,this.s=e,this.recovery=n,this.assertValidity()}static fromCompact(t){const n=e.nByteLength;return t=I("compactSignature",t,2*n),new y(p(t,0,n),p(t,n,2*n))}static fromDER(t){const{r:e,s:n}=tt.toSig(I("DER",t));return new y(e,n)}assertValidity(){if(!d(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!d(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(t){return new y(this.r,this.s,t)}recoverPublicKey(t){const{r:r,s:o,recovery:i}=this,u=N(I("msgHash",t));if(null==i||![0,1,2,3].includes(i))throw new Error("recovery id invalid");const c=2===i||3===i?r+e.n:r;if(c>=n.ORDER)throw new Error("recovery id 2 or 3 invalid");const l=1&i?"03":"02",d=a.fromHex(l+h(c)),g=f(c),w=s(-u*g),p=s(o*g),y=a.BASE.multiplyAndAddUnsafe(d,w,p);if(!y)throw new Error("point at infinify");return y.assertValidity(),y}hasHighS(){return w(this.s)}normalizeS(){return this.hasHighS()?new y(this.r,s(-this.s),this.recovery):this}toDERRawBytes(){return E(this.toDERHex())}toDERHex(){return tt.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return E(this.toCompactHex())}toCompactHex(){return h(this.r)+h(this.s)}}const m={isValidPrivateKey(t){try{return u(t),!0}catch(e){return!1}},normPrivateKeyToScalar:u,randomPrivateKey:()=>{const t=M(e.n);return function(t,e,n=!1){const r=t.length,o=Y(e),i=M(e);if(r<16||r<i||r>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${r}`);const s=k(n?b(t):B(t),e-_)+_;return n?v(s,o):x(s,o)}(e.randomBytes(t),e.n)},precompute:(t=8,e=a.BASE)=>(e._setWindowSize(t),e.multiply(BigInt(3)),e)};function O(t){const e=l(t),n="string"==typeof t,r=(e||n)&&t.length;return e?r===o||r===i:n?r===2*o||r===2*i:t instanceof a}const R=e.bits2int||function(t){const n=b(t),r=8*t.length-e.nBitLength;return r>0?n>>BigInt(r):n},N=e.bits2int_modN||function(t){return s(R(t))},T=A(e.nBitLength);function L(t){if("bigint"!=typeof t)throw new Error("bigint expected");if(!(et<=t&&t<T))throw new Error(`bigint expected < 2^${e.nBitLength}`);return x(t,e.nByteLength)}function $(t,r,o=P){if(["recovered","canonical"].some((t=>t in o)))throw new Error("sign() legacy options not supported");const{hash:i,randomBytes:c}=e;let{lowS:l,prehash:h,extraEntropy:g}=o;null==l&&(l=!0),t=I("msgHash",t),h&&(t=I("prehashed msgHash",i(t)));const p=N(t),m=u(r),E=[L(m),L(p)];if(null!=g&&!1!==g){const t=!0===g?c(n.BYTES):g;E.push(I("extraEntropy",t))}const b=S(...E),B=p;return{seed:b,k2sig:function(t){const e=R(t);if(!d(e))return;const n=f(e),r=a.BASE.multiply(e).toAffine(),o=s(r.x);if(o===et)return;const i=s(n*s(B+o*m));if(i===et)return;let u=(r.x===o?0:2)|Number(r.y&nt),c=i;return l&&w(i)&&(c=function(t){return w(t)?s(-t):t}(i),u^=1),new y(o,c,u)}}}const P={lowS:e.lowS,prehash:!1},z={lowS:e.lowS,prehash:!1};return a.BASE._setWindowSize(8),{CURVE:e,getPublicKey:function(t,e=!0){return a.fromPrivateKey(t).toRawBytes(e)},getSharedSecret:function(t,e,n=!0){if(O(t))throw new Error("first arg must be private key");if(!O(e))throw new Error("second arg must be public key");return a.fromHex(e).multiply(u(t)).toRawBytes(n)},sign:function(t,n,r=P){const{seed:o,k2sig:i}=$(t,n,r),s=e;return q(s.hash.outputLen,s.nByteLength,s.hmac)(o,i)},verify:function(t,n,r,o=z){var i;const u=t;if(n=I("msgHash",n),r=I("publicKey",r),"strict"in o)throw new Error("options.strict was renamed to lowS");const{lowS:c,prehash:d}=o;let h,g;try{if("string"==typeof u||l(u))try{h=y.fromDER(u)}catch(v){if(!(v instanceof tt.Err))throw v;h=y.fromCompact(u)}else{if("object"!=typeof u||"bigint"!=typeof u.r||"bigint"!=typeof u.s)throw new Error("PARSE");{const{r:t,s:e}=u;h=new y(t,e)}}g=a.fromHex(r)}catch(S){if("PARSE"===S.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(c&&h.hasHighS())return!1;d&&(n=e.hash(n));const{r:w,s:p}=h,m=N(n),E=f(p),b=s(m*E),B=s(w*E),x=null==(i=a.BASE.multiplyAndAddUnsafe(g,b,B))?void 0:i.toAffine();return!!x&&s(x.x)===w},ProjectivePoint:a,Signature:y,utils:m}}BigInt(4);class st extends t{constructor(t,r){super(),this.finished=!1,this.destroyed=!1,e(t);const o=n(r);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,s=new Uint8Array(i);s.set(o.length>i?t.create().update(o).digest():o);for(let e=0;e<s.length;e++)s[e]^=54;this.iHash.update(s),this.oHash=t.create();for(let e=0;e<s.length;e++)s[e]^=106;this.oHash.update(s),s.fill(0)}update(t){return r(this),this.iHash.update(t),this}digestInto(t){r(this),o(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy()}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:e,iHash:n,finished:r,destroyed:o,blockLen:i,outputLen:s}=this;return t.finished=r,t.destroyed=o,t.blockLen=i,t.outputLen=s,t.oHash=e._cloneInto(t.oHash),t.iHash=n._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const ft=(t,e,n)=>new st(t,e).update(n).digest();
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
function at(t){return{hash:t,hmac:(e,...n)=>ft(t,e,i(...n)),randomBytes:s}}ft.create=(t,e)=>new st(t,e);
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const ut=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),ct=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),lt=BigInt(1),dt=BigInt(2),ht=(t,e)=>(t+e/dt)/e;const gt=function(t,e,n=!1,r={}){if(t<=L)throw new Error(`Expected Field ORDER > 0, got ${t}`);const{nBitLength:o,nByteLength:i}=D(t,e);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const s=V(t),f=Object.freeze({ORDER:t,BITS:o,BYTES:i,MASK:A(o),ZERO:L,ONE:_,create:e=>k(e,t),isValid:e=>{if("bigint"!=typeof e)throw new Error("Invalid field element: expected bigint, got "+typeof e);return L<=e&&e<t},is0:t=>t===L,isOdd:t=>(t&_)===_,neg:e=>k(-e,t),eql:(t,e)=>t===e,sqr:e=>k(e*e,t),add:(e,n)=>k(e+n,t),sub:(e,n)=>k(e-n,t),mul:(e,n)=>k(e*n,t),pow:(t,e)=>function(t,e,n){if(n<L)throw new Error("Expected power > 0");if(n===L)return t.ONE;if(n===_)return e;let r=t.ONE,o=e;for(;n>L;)n&_&&(r=t.mul(r,o)),o=t.sqr(o),n>>=_;return r}(f,t,e),div:(e,n)=>k(e*C(n,t),t),sqrN:t=>t*t,addN:(t,e)=>t+e,subN:(t,e)=>t-e,mulN:(t,e)=>t*e,inv:e=>C(e,t),sqrt:r.sqrt||(t=>s(f,t)),invertBatch:t=>function(t,e){const n=new Array(e.length),r=e.reduce(((e,r,o)=>t.is0(r)?e:(n[o]=e,t.mul(e,r))),t.ONE),o=t.inv(r);return e.reduceRight(((e,r,o)=>t.is0(r)?e:(n[o]=t.mul(e,n[o]),t.mul(e,r))),o),n}(f,t),cmov:(t,e,n)=>n?e:t,toBytes:t=>n?v(t,i):x(t,i),fromBytes:t=>{if(t.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${t.length}`);return n?B(t):b(t)}});return Object.freeze(f)}(ut,void 0,void 0,{sqrt:function(t){const e=ut,n=BigInt(3),r=BigInt(6),o=BigInt(11),i=BigInt(22),s=BigInt(23),f=BigInt(44),a=BigInt(88),u=t*t*t%e,c=u*u*t%e,l=j(c,n,e)*c%e,d=j(l,n,e)*c%e,h=j(d,dt,e)*u%e,g=j(h,o,e)*h%e,w=j(g,i,e)*g%e,p=j(w,f,e)*w%e,y=j(p,a,e)*p%e,m=j(y,f,e)*w%e,E=j(m,n,e)*c%e,b=j(E,s,e)*g%e,B=j(b,r,e)*u%e,x=j(B,dt,e);if(!gt.eql(gt.sqr(x),t))throw new Error("Cannot find square root");return x}}),wt=function(t,e){const n=e=>it({...t,...at(e)});return Object.freeze({...n(e),create:n})}({a:BigInt(0),b:BigInt(7),Fp:gt,n:ct,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:t=>{const e=ct,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-lt*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),o=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),i=n,s=BigInt("0x100000000000000000000000000000000"),f=ht(i*t,e),a=ht(-r*t,e);let u=k(t-f*n-a*o,e),c=k(-f*r-a*i,e);const l=u>s,d=c>s;if(l&&(u=e-u),d&&(c=e-c),u>s||c>s)throw new Error("splitScalar: Endomorphism failed, k="+t);return{k1neg:l,k1:u,k2neg:d,k2:c}}}},f);BigInt(0),wt.ProjectivePoint;export{wt as secp256k1};
